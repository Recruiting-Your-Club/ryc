"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.s_variant = exports.s_size = exports.s_base = exports.buttonSize = void 0;
var _react = require("@emotion/react");
var _styles = _interopRequireDefault(require("@ssoc/styles"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
var buttonSize = exports.buttonSize = {
  xs: {
    height: '2rem',
    padding: '0.5rem',
    typography: _styles.default.typography.subCaptionRegular
  },
  s: {
    height: '2.5rem',
    padding: '0.5rem',
    typography: _styles.default.typography.captionRegular
  },
  md: {
    height: '2.7rem',
    padding: '0.6rem',
    typography: _styles.default.typography.captionRegular
  },
  lg: {
    height: '3rem',
    padding: '0.8rem',
    typography: _styles.default.typography.captionRegular
  },
  xl: {
    height: '3.6rem',
    padding: '1rem 2rem',
    typography: _styles.default.typography.captionRegular
  },
  full: {
    width: '100%',
    height: '3.6rem',
    padding: '0.8rem',
    typography: _styles.default.typography.captionRegular
  }
};
var s_size = exports.s_size = function s_size() {
  var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'md';
  return (0, _react.css)(buttonSize[size].typography, " width:", buttonSize[size].width, ";height:", buttonSize[size].height, ";padding:", buttonSize[size].padding, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:s_size;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9CdXR0b24vQnV0dG9uLnN0eWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXVEYyIsImZpbGUiOiIuLi8uLi8uLi9zcmMvQnV0dG9uL0J1dHRvbi5zdHlsZS50cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB0eXBlIHsgQ1NTT2JqZWN0IH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBDU1NQcm9wZXJ0aWVzIH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgdGhlbWUgZnJvbSAnQHNzb2Mvc3R5bGVzJztcblxuaW1wb3J0IHR5cGUgeyBCdXR0b25TaXplIH0gZnJvbSAnLi9CdXR0b24nO1xuaW1wb3J0IHR5cGUgeyBCdXR0b25WYXJpYW50IH0gZnJvbSAnLi9CdXR0b24nO1xuXG5pbnRlcmZhY2UgVHlwb2dyYXBoeSBleHRlbmRzIENTU09iamVjdCB7XG4gICAgZm9udFNpemU6IENTU1Byb3BlcnRpZXNbJ2ZvbnRTaXplJ107XG4gICAgZm9udFdlaWdodDogQ1NTUHJvcGVydGllc1snZm9udFdlaWdodCddO1xuICAgIGxpbmVIZWlnaHQ6IENTU1Byb3BlcnRpZXNbJ2xpbmVIZWlnaHQnXTtcbn1cbmludGVyZmFjZSBTaXplIHtcbiAgICB3aWR0aD86IENTU1Byb3BlcnRpZXNbJ3dpZHRoJ107XG4gICAgaGVpZ2h0PzogQ1NTUHJvcGVydGllc1snaGVpZ2h0J107XG4gICAgcGFkZGluZzogQ1NTUHJvcGVydGllc1sncGFkZGluZyddO1xuICAgIHR5cG9ncmFwaHk6IFR5cG9ncmFwaHk7XG59XG5cbmV4cG9ydCBjb25zdCBidXR0b25TaXplOiBSZWNvcmQ8QnV0dG9uU2l6ZSwgU2l6ZT4gPSB7XG4gICAgeHM6IHtcbiAgICAgICAgaGVpZ2h0OiAnMnJlbScsXG4gICAgICAgIHBhZGRpbmc6ICcwLjVyZW0nLFxuICAgICAgICB0eXBvZ3JhcGh5OiB0aGVtZS50eXBvZ3JhcGh5LnN1YkNhcHRpb25SZWd1bGFyLFxuICAgIH0sXG4gICAgczoge1xuICAgICAgICBoZWlnaHQ6ICcyLjVyZW0nLFxuICAgICAgICBwYWRkaW5nOiAnMC41cmVtJyxcbiAgICAgICAgdHlwb2dyYXBoeTogdGhlbWUudHlwb2dyYXBoeS5jYXB0aW9uUmVndWxhcixcbiAgICB9LFxuICAgIG1kOiB7XG4gICAgICAgIGhlaWdodDogJzIuN3JlbScsXG4gICAgICAgIHBhZGRpbmc6ICcwLjZyZW0nLFxuICAgICAgICB0eXBvZ3JhcGh5OiB0aGVtZS50eXBvZ3JhcGh5LmNhcHRpb25SZWd1bGFyLFxuICAgIH0sXG4gICAgbGc6IHtcbiAgICAgICAgaGVpZ2h0OiAnM3JlbScsXG4gICAgICAgIHBhZGRpbmc6ICcwLjhyZW0nLFxuICAgICAgICB0eXBvZ3JhcGh5OiB0aGVtZS50eXBvZ3JhcGh5LmNhcHRpb25SZWd1bGFyLFxuICAgIH0sXG4gICAgeGw6IHtcbiAgICAgICAgaGVpZ2h0OiAnMy42cmVtJyxcbiAgICAgICAgcGFkZGluZzogJzFyZW0gMnJlbScsXG4gICAgICAgIHR5cG9ncmFwaHk6IHRoZW1lLnR5cG9ncmFwaHkuY2FwdGlvblJlZ3VsYXIsXG4gICAgfSxcbiAgICBmdWxsOiB7XG4gICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgIGhlaWdodDogJzMuNnJlbScsXG4gICAgICAgIHBhZGRpbmc6ICcwLjhyZW0nLFxuICAgICAgICB0eXBvZ3JhcGh5OiB0aGVtZS50eXBvZ3JhcGh5LmNhcHRpb25SZWd1bGFyLFxuICAgIH0sXG59O1xuZXhwb3J0IGNvbnN0IHNfc2l6ZSA9IChzaXplOiBCdXR0b25TaXplID0gJ21kJykgPT4ge1xuICAgIHJldHVybiBjc3NgXG4gICAgICAgICR7YnV0dG9uU2l6ZVtzaXplXS50eXBvZ3JhcGh5fVxuICAgICAgICB3aWR0aDogJHtidXR0b25TaXplW3NpemVdLndpZHRofTtcbiAgICAgICAgaGVpZ2h0OiAke2J1dHRvblNpemVbc2l6ZV0uaGVpZ2h0fTtcbiAgICAgICAgcGFkZGluZzogJHtidXR0b25TaXplW3NpemVdLnBhZGRpbmd9O1xuICAgIGA7XG59O1xuXG5leHBvcnQgY29uc3Qgc192YXJpYW50ID0gKHZhcmlhbnQ6IEJ1dHRvblZhcmlhbnQpID0+IHtcbiAgICBzd2l0Y2ggKHZhcmlhbnQpIHtcbiAgICAgICAgY2FzZSAncHJpbWFyeSc6XG4gICAgICAgICAgICByZXR1cm4gY3NzYFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmRlZmF1bHR9O1xuICAgICAgICAgICAgICAgIGNvbG9yOiAke3RoZW1lLmNvbG9ycy53aGl0ZX07XG4gICAgICAgICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4ycztcbiAgICAgICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0aGVtZS5jb2xvcnMuZGVmYXVsdEhvdmVyfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgO1xuICAgICAgICBjYXNlICdvdXRsaW5lZCc6XG4gICAgICAgICAgICByZXR1cm4gY3NzYFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLndoaXRlfTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMuYmxhY2t9O1xuICAgICAgICAgICAgICAgIGJvcmRlcjogMC4xcmVtIHNvbGlkICR7dGhlbWUuY29sb3JzLmdyYXlbNTAwXX07XG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjJzO1xuICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMuZGVmYXVsdH07XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlcjogMC4xcmVtIHNvbGlkICR7dGhlbWUuY29sb3JzLmRlZmF1bHR9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGA7XG4gICAgICAgIGNhc2UgJ3RyYW5zcGFyZW50JzpcbiAgICAgICAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAgICAgICAgIGNvbG9yOiAke3RoZW1lLmNvbG9ycy50ZXh0SGVscGVyfTtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnM7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmdyYXlbMTAwXX07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYDtcbiAgICAgICAgY2FzZSAndGV4dCc6XG4gICAgICAgICAgICByZXR1cm4gY3NzYFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnM7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAke3RoZW1lLmNvbG9ycy5kZWZhdWx0SG92ZXJ9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGA7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gY3NzYFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmRlZmF1bHR9O1xuICAgICAgICAgICAgICAgIGNvbG9yOiAke3RoZW1lLmNvbG9ycy53aGl0ZX07XG4gICAgICAgICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4ycztcbiAgICAgICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0aGVtZS5jb2xvcnMuZGVmYXVsdEhvdmVyfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgO1xuICAgIH1cbn07XG5cbmV4cG9ydCBjb25zdCBzX2Jhc2UgPSAoYm9yZGVyUmFkaXVzOiBzdHJpbmcgPSAnMC42cmVtJywgekluZGV4OiBudW1iZXIgPSAwKSA9PiB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6ICR7Ym9yZGVyUmFkaXVzfTtcbiAgICAgICAgei1pbmRleDogJHt6SW5kZXh9O1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICY6ZGlzYWJsZWQge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0aGVtZS5jb2xvcnMuZGlzYWJsZWR9O1xuICAgICAgICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzLndoaXRlfTtcbiAgICAgICAgICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XG4gICAgICAgIH1cbiAgICAgICAgJjpkaXNhYmxlZDpob3ZlciB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy5kaXNhYmxlZH07XG4gICAgICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICB9XG4gICAgYDtcbn07XG4iXX0= */");
};
var s_variant = variant => {
  switch (variant) {
    case 'primary':
      return (0, _react.css)("background-color:", _styles.default.colors.default, ";color:", _styles.default.colors.white, ";border:none;transition:background-color 0.2s;&:hover{background-color:", _styles.default.colors.defaultHover, ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:s_variant;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9CdXR0b24vQnV0dG9uLnN0eWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtFc0IiLCJmaWxlIjoiLi4vLi4vLi4vc3JjL0J1dHRvbi9CdXR0b24uc3R5bGUudHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgdHlwZSB7IENTU09iamVjdCB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB0eXBlIHsgQ1NTUHJvcGVydGllcyB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHRoZW1lIGZyb20gJ0Bzc29jL3N0eWxlcyc7XG5cbmltcG9ydCB0eXBlIHsgQnV0dG9uU2l6ZSB9IGZyb20gJy4vQnV0dG9uJztcbmltcG9ydCB0eXBlIHsgQnV0dG9uVmFyaWFudCB9IGZyb20gJy4vQnV0dG9uJztcblxuaW50ZXJmYWNlIFR5cG9ncmFwaHkgZXh0ZW5kcyBDU1NPYmplY3Qge1xuICAgIGZvbnRTaXplOiBDU1NQcm9wZXJ0aWVzWydmb250U2l6ZSddO1xuICAgIGZvbnRXZWlnaHQ6IENTU1Byb3BlcnRpZXNbJ2ZvbnRXZWlnaHQnXTtcbiAgICBsaW5lSGVpZ2h0OiBDU1NQcm9wZXJ0aWVzWydsaW5lSGVpZ2h0J107XG59XG5pbnRlcmZhY2UgU2l6ZSB7XG4gICAgd2lkdGg/OiBDU1NQcm9wZXJ0aWVzWyd3aWR0aCddO1xuICAgIGhlaWdodD86IENTU1Byb3BlcnRpZXNbJ2hlaWdodCddO1xuICAgIHBhZGRpbmc6IENTU1Byb3BlcnRpZXNbJ3BhZGRpbmcnXTtcbiAgICB0eXBvZ3JhcGh5OiBUeXBvZ3JhcGh5O1xufVxuXG5leHBvcnQgY29uc3QgYnV0dG9uU2l6ZTogUmVjb3JkPEJ1dHRvblNpemUsIFNpemU+ID0ge1xuICAgIHhzOiB7XG4gICAgICAgIGhlaWdodDogJzJyZW0nLFxuICAgICAgICBwYWRkaW5nOiAnMC41cmVtJyxcbiAgICAgICAgdHlwb2dyYXBoeTogdGhlbWUudHlwb2dyYXBoeS5zdWJDYXB0aW9uUmVndWxhcixcbiAgICB9LFxuICAgIHM6IHtcbiAgICAgICAgaGVpZ2h0OiAnMi41cmVtJyxcbiAgICAgICAgcGFkZGluZzogJzAuNXJlbScsXG4gICAgICAgIHR5cG9ncmFwaHk6IHRoZW1lLnR5cG9ncmFwaHkuY2FwdGlvblJlZ3VsYXIsXG4gICAgfSxcbiAgICBtZDoge1xuICAgICAgICBoZWlnaHQ6ICcyLjdyZW0nLFxuICAgICAgICBwYWRkaW5nOiAnMC42cmVtJyxcbiAgICAgICAgdHlwb2dyYXBoeTogdGhlbWUudHlwb2dyYXBoeS5jYXB0aW9uUmVndWxhcixcbiAgICB9LFxuICAgIGxnOiB7XG4gICAgICAgIGhlaWdodDogJzNyZW0nLFxuICAgICAgICBwYWRkaW5nOiAnMC44cmVtJyxcbiAgICAgICAgdHlwb2dyYXBoeTogdGhlbWUudHlwb2dyYXBoeS5jYXB0aW9uUmVndWxhcixcbiAgICB9LFxuICAgIHhsOiB7XG4gICAgICAgIGhlaWdodDogJzMuNnJlbScsXG4gICAgICAgIHBhZGRpbmc6ICcxcmVtIDJyZW0nLFxuICAgICAgICB0eXBvZ3JhcGh5OiB0aGVtZS50eXBvZ3JhcGh5LmNhcHRpb25SZWd1bGFyLFxuICAgIH0sXG4gICAgZnVsbDoge1xuICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICBoZWlnaHQ6ICczLjZyZW0nLFxuICAgICAgICBwYWRkaW5nOiAnMC44cmVtJyxcbiAgICAgICAgdHlwb2dyYXBoeTogdGhlbWUudHlwb2dyYXBoeS5jYXB0aW9uUmVndWxhcixcbiAgICB9LFxufTtcbmV4cG9ydCBjb25zdCBzX3NpemUgPSAoc2l6ZTogQnV0dG9uU2l6ZSA9ICdtZCcpID0+IHtcbiAgICByZXR1cm4gY3NzYFxuICAgICAgICAke2J1dHRvblNpemVbc2l6ZV0udHlwb2dyYXBoeX1cbiAgICAgICAgd2lkdGg6ICR7YnV0dG9uU2l6ZVtzaXplXS53aWR0aH07XG4gICAgICAgIGhlaWdodDogJHtidXR0b25TaXplW3NpemVdLmhlaWdodH07XG4gICAgICAgIHBhZGRpbmc6ICR7YnV0dG9uU2l6ZVtzaXplXS5wYWRkaW5nfTtcbiAgICBgO1xufTtcblxuZXhwb3J0IGNvbnN0IHNfdmFyaWFudCA9ICh2YXJpYW50OiBCdXR0b25WYXJpYW50KSA9PiB7XG4gICAgc3dpdGNoICh2YXJpYW50KSB7XG4gICAgICAgIGNhc2UgJ3ByaW1hcnknOlxuICAgICAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy5kZWZhdWx0fTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMud2hpdGV9O1xuICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnM7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmRlZmF1bHRIb3Zlcn07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYDtcbiAgICAgICAgY2FzZSAnb3V0bGluZWQnOlxuICAgICAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy53aGl0ZX07XG4gICAgICAgICAgICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzLmJsYWNrfTtcbiAgICAgICAgICAgICAgICBib3JkZXI6IDAuMXJlbSBzb2xpZCAke3RoZW1lLmNvbG9ycy5ncmF5WzUwMF19O1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4ycztcbiAgICAgICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzLmRlZmF1bHR9O1xuICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDAuMXJlbSBzb2xpZCAke3RoZW1lLmNvbG9ycy5kZWZhdWx0fTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgO1xuICAgICAgICBjYXNlICd0cmFuc3BhcmVudCc6XG4gICAgICAgICAgICByZXR1cm4gY3NzYFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMudGV4dEhlbHBlcn07XG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjJzO1xuICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy5ncmF5WzEwMF19O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGA7XG4gICAgICAgIGNhc2UgJ3RleHQnOlxuICAgICAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjJzO1xuICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMuZGVmYXVsdEhvdmVyfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy5kZWZhdWx0fTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMud2hpdGV9O1xuICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnM7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmRlZmF1bHRIb3Zlcn07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYDtcbiAgICB9XG59O1xuXG5leHBvcnQgY29uc3Qgc19iYXNlID0gKGJvcmRlclJhZGl1czogc3RyaW5nID0gJzAuNnJlbScsIHpJbmRleDogbnVtYmVyID0gMCkgPT4ge1xuICAgIHJldHVybiBjc3NgXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICBib3JkZXItcmFkaXVzOiAke2JvcmRlclJhZGl1c307XG4gICAgICAgIHotaW5kZXg6ICR7ekluZGV4fTtcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAmOmRpc2FibGVkIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmRpc2FibGVkfTtcbiAgICAgICAgICAgIGNvbG9yOiAke3RoZW1lLmNvbG9ycy53aGl0ZX07XG4gICAgICAgICAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgICAgICB9XG4gICAgICAgICY6ZGlzYWJsZWQ6aG92ZXIge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0aGVtZS5jb2xvcnMuZGlzYWJsZWR9O1xuICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgfVxuICAgIGA7XG59O1xuIl19 */");
    case 'outlined':
      return (0, _react.css)("background-color:", _styles.default.colors.white, ";color:", _styles.default.colors.black, ";border:0.1rem solid ", _styles.default.colors.gray[500], ";transition:background-color 0.2s;&:hover{color:", _styles.default.colors.default, ";border:0.1rem solid ", _styles.default.colors.default, ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:s_variant;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9CdXR0b24vQnV0dG9uLnN0eWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRFc0IiLCJmaWxlIjoiLi4vLi4vLi4vc3JjL0J1dHRvbi9CdXR0b24uc3R5bGUudHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgdHlwZSB7IENTU09iamVjdCB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB0eXBlIHsgQ1NTUHJvcGVydGllcyB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHRoZW1lIGZyb20gJ0Bzc29jL3N0eWxlcyc7XG5cbmltcG9ydCB0eXBlIHsgQnV0dG9uU2l6ZSB9IGZyb20gJy4vQnV0dG9uJztcbmltcG9ydCB0eXBlIHsgQnV0dG9uVmFyaWFudCB9IGZyb20gJy4vQnV0dG9uJztcblxuaW50ZXJmYWNlIFR5cG9ncmFwaHkgZXh0ZW5kcyBDU1NPYmplY3Qge1xuICAgIGZvbnRTaXplOiBDU1NQcm9wZXJ0aWVzWydmb250U2l6ZSddO1xuICAgIGZvbnRXZWlnaHQ6IENTU1Byb3BlcnRpZXNbJ2ZvbnRXZWlnaHQnXTtcbiAgICBsaW5lSGVpZ2h0OiBDU1NQcm9wZXJ0aWVzWydsaW5lSGVpZ2h0J107XG59XG5pbnRlcmZhY2UgU2l6ZSB7XG4gICAgd2lkdGg/OiBDU1NQcm9wZXJ0aWVzWyd3aWR0aCddO1xuICAgIGhlaWdodD86IENTU1Byb3BlcnRpZXNbJ2hlaWdodCddO1xuICAgIHBhZGRpbmc6IENTU1Byb3BlcnRpZXNbJ3BhZGRpbmcnXTtcbiAgICB0eXBvZ3JhcGh5OiBUeXBvZ3JhcGh5O1xufVxuXG5leHBvcnQgY29uc3QgYnV0dG9uU2l6ZTogUmVjb3JkPEJ1dHRvblNpemUsIFNpemU+ID0ge1xuICAgIHhzOiB7XG4gICAgICAgIGhlaWdodDogJzJyZW0nLFxuICAgICAgICBwYWRkaW5nOiAnMC41cmVtJyxcbiAgICAgICAgdHlwb2dyYXBoeTogdGhlbWUudHlwb2dyYXBoeS5zdWJDYXB0aW9uUmVndWxhcixcbiAgICB9LFxuICAgIHM6IHtcbiAgICAgICAgaGVpZ2h0OiAnMi41cmVtJyxcbiAgICAgICAgcGFkZGluZzogJzAuNXJlbScsXG4gICAgICAgIHR5cG9ncmFwaHk6IHRoZW1lLnR5cG9ncmFwaHkuY2FwdGlvblJlZ3VsYXIsXG4gICAgfSxcbiAgICBtZDoge1xuICAgICAgICBoZWlnaHQ6ICcyLjdyZW0nLFxuICAgICAgICBwYWRkaW5nOiAnMC42cmVtJyxcbiAgICAgICAgdHlwb2dyYXBoeTogdGhlbWUudHlwb2dyYXBoeS5jYXB0aW9uUmVndWxhcixcbiAgICB9LFxuICAgIGxnOiB7XG4gICAgICAgIGhlaWdodDogJzNyZW0nLFxuICAgICAgICBwYWRkaW5nOiAnMC44cmVtJyxcbiAgICAgICAgdHlwb2dyYXBoeTogdGhlbWUudHlwb2dyYXBoeS5jYXB0aW9uUmVndWxhcixcbiAgICB9LFxuICAgIHhsOiB7XG4gICAgICAgIGhlaWdodDogJzMuNnJlbScsXG4gICAgICAgIHBhZGRpbmc6ICcxcmVtIDJyZW0nLFxuICAgICAgICB0eXBvZ3JhcGh5OiB0aGVtZS50eXBvZ3JhcGh5LmNhcHRpb25SZWd1bGFyLFxuICAgIH0sXG4gICAgZnVsbDoge1xuICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICBoZWlnaHQ6ICczLjZyZW0nLFxuICAgICAgICBwYWRkaW5nOiAnMC44cmVtJyxcbiAgICAgICAgdHlwb2dyYXBoeTogdGhlbWUudHlwb2dyYXBoeS5jYXB0aW9uUmVndWxhcixcbiAgICB9LFxufTtcbmV4cG9ydCBjb25zdCBzX3NpemUgPSAoc2l6ZTogQnV0dG9uU2l6ZSA9ICdtZCcpID0+IHtcbiAgICByZXR1cm4gY3NzYFxuICAgICAgICAke2J1dHRvblNpemVbc2l6ZV0udHlwb2dyYXBoeX1cbiAgICAgICAgd2lkdGg6ICR7YnV0dG9uU2l6ZVtzaXplXS53aWR0aH07XG4gICAgICAgIGhlaWdodDogJHtidXR0b25TaXplW3NpemVdLmhlaWdodH07XG4gICAgICAgIHBhZGRpbmc6ICR7YnV0dG9uU2l6ZVtzaXplXS5wYWRkaW5nfTtcbiAgICBgO1xufTtcblxuZXhwb3J0IGNvbnN0IHNfdmFyaWFudCA9ICh2YXJpYW50OiBCdXR0b25WYXJpYW50KSA9PiB7XG4gICAgc3dpdGNoICh2YXJpYW50KSB7XG4gICAgICAgIGNhc2UgJ3ByaW1hcnknOlxuICAgICAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy5kZWZhdWx0fTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMud2hpdGV9O1xuICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnM7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmRlZmF1bHRIb3Zlcn07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYDtcbiAgICAgICAgY2FzZSAnb3V0bGluZWQnOlxuICAgICAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy53aGl0ZX07XG4gICAgICAgICAgICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzLmJsYWNrfTtcbiAgICAgICAgICAgICAgICBib3JkZXI6IDAuMXJlbSBzb2xpZCAke3RoZW1lLmNvbG9ycy5ncmF5WzUwMF19O1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4ycztcbiAgICAgICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzLmRlZmF1bHR9O1xuICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDAuMXJlbSBzb2xpZCAke3RoZW1lLmNvbG9ycy5kZWZhdWx0fTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgO1xuICAgICAgICBjYXNlICd0cmFuc3BhcmVudCc6XG4gICAgICAgICAgICByZXR1cm4gY3NzYFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMudGV4dEhlbHBlcn07XG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjJzO1xuICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy5ncmF5WzEwMF19O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGA7XG4gICAgICAgIGNhc2UgJ3RleHQnOlxuICAgICAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjJzO1xuICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMuZGVmYXVsdEhvdmVyfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy5kZWZhdWx0fTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMud2hpdGV9O1xuICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnM7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmRlZmF1bHRIb3Zlcn07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYDtcbiAgICB9XG59O1xuXG5leHBvcnQgY29uc3Qgc19iYXNlID0gKGJvcmRlclJhZGl1czogc3RyaW5nID0gJzAuNnJlbScsIHpJbmRleDogbnVtYmVyID0gMCkgPT4ge1xuICAgIHJldHVybiBjc3NgXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICBib3JkZXItcmFkaXVzOiAke2JvcmRlclJhZGl1c307XG4gICAgICAgIHotaW5kZXg6ICR7ekluZGV4fTtcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAmOmRpc2FibGVkIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmRpc2FibGVkfTtcbiAgICAgICAgICAgIGNvbG9yOiAke3RoZW1lLmNvbG9ycy53aGl0ZX07XG4gICAgICAgICAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgICAgICB9XG4gICAgICAgICY6ZGlzYWJsZWQ6aG92ZXIge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0aGVtZS5jb2xvcnMuZGlzYWJsZWR9O1xuICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgfVxuICAgIGA7XG59O1xuIl19 */");
    case 'transparent':
      return (0, _react.css)("background-color:transparent;border:none;color:", _styles.default.colors.textHelper, ";transition:background-color 0.2s;&:hover{background-color:", _styles.default.colors.gray[100], ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:s_variant;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9CdXR0b24vQnV0dG9uLnN0eWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXVGc0IiLCJmaWxlIjoiLi4vLi4vLi4vc3JjL0J1dHRvbi9CdXR0b24uc3R5bGUudHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgdHlwZSB7IENTU09iamVjdCB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB0eXBlIHsgQ1NTUHJvcGVydGllcyB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHRoZW1lIGZyb20gJ0Bzc29jL3N0eWxlcyc7XG5cbmltcG9ydCB0eXBlIHsgQnV0dG9uU2l6ZSB9IGZyb20gJy4vQnV0dG9uJztcbmltcG9ydCB0eXBlIHsgQnV0dG9uVmFyaWFudCB9IGZyb20gJy4vQnV0dG9uJztcblxuaW50ZXJmYWNlIFR5cG9ncmFwaHkgZXh0ZW5kcyBDU1NPYmplY3Qge1xuICAgIGZvbnRTaXplOiBDU1NQcm9wZXJ0aWVzWydmb250U2l6ZSddO1xuICAgIGZvbnRXZWlnaHQ6IENTU1Byb3BlcnRpZXNbJ2ZvbnRXZWlnaHQnXTtcbiAgICBsaW5lSGVpZ2h0OiBDU1NQcm9wZXJ0aWVzWydsaW5lSGVpZ2h0J107XG59XG5pbnRlcmZhY2UgU2l6ZSB7XG4gICAgd2lkdGg/OiBDU1NQcm9wZXJ0aWVzWyd3aWR0aCddO1xuICAgIGhlaWdodD86IENTU1Byb3BlcnRpZXNbJ2hlaWdodCddO1xuICAgIHBhZGRpbmc6IENTU1Byb3BlcnRpZXNbJ3BhZGRpbmcnXTtcbiAgICB0eXBvZ3JhcGh5OiBUeXBvZ3JhcGh5O1xufVxuXG5leHBvcnQgY29uc3QgYnV0dG9uU2l6ZTogUmVjb3JkPEJ1dHRvblNpemUsIFNpemU+ID0ge1xuICAgIHhzOiB7XG4gICAgICAgIGhlaWdodDogJzJyZW0nLFxuICAgICAgICBwYWRkaW5nOiAnMC41cmVtJyxcbiAgICAgICAgdHlwb2dyYXBoeTogdGhlbWUudHlwb2dyYXBoeS5zdWJDYXB0aW9uUmVndWxhcixcbiAgICB9LFxuICAgIHM6IHtcbiAgICAgICAgaGVpZ2h0OiAnMi41cmVtJyxcbiAgICAgICAgcGFkZGluZzogJzAuNXJlbScsXG4gICAgICAgIHR5cG9ncmFwaHk6IHRoZW1lLnR5cG9ncmFwaHkuY2FwdGlvblJlZ3VsYXIsXG4gICAgfSxcbiAgICBtZDoge1xuICAgICAgICBoZWlnaHQ6ICcyLjdyZW0nLFxuICAgICAgICBwYWRkaW5nOiAnMC42cmVtJyxcbiAgICAgICAgdHlwb2dyYXBoeTogdGhlbWUudHlwb2dyYXBoeS5jYXB0aW9uUmVndWxhcixcbiAgICB9LFxuICAgIGxnOiB7XG4gICAgICAgIGhlaWdodDogJzNyZW0nLFxuICAgICAgICBwYWRkaW5nOiAnMC44cmVtJyxcbiAgICAgICAgdHlwb2dyYXBoeTogdGhlbWUudHlwb2dyYXBoeS5jYXB0aW9uUmVndWxhcixcbiAgICB9LFxuICAgIHhsOiB7XG4gICAgICAgIGhlaWdodDogJzMuNnJlbScsXG4gICAgICAgIHBhZGRpbmc6ICcxcmVtIDJyZW0nLFxuICAgICAgICB0eXBvZ3JhcGh5OiB0aGVtZS50eXBvZ3JhcGh5LmNhcHRpb25SZWd1bGFyLFxuICAgIH0sXG4gICAgZnVsbDoge1xuICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICBoZWlnaHQ6ICczLjZyZW0nLFxuICAgICAgICBwYWRkaW5nOiAnMC44cmVtJyxcbiAgICAgICAgdHlwb2dyYXBoeTogdGhlbWUudHlwb2dyYXBoeS5jYXB0aW9uUmVndWxhcixcbiAgICB9LFxufTtcbmV4cG9ydCBjb25zdCBzX3NpemUgPSAoc2l6ZTogQnV0dG9uU2l6ZSA9ICdtZCcpID0+IHtcbiAgICByZXR1cm4gY3NzYFxuICAgICAgICAke2J1dHRvblNpemVbc2l6ZV0udHlwb2dyYXBoeX1cbiAgICAgICAgd2lkdGg6ICR7YnV0dG9uU2l6ZVtzaXplXS53aWR0aH07XG4gICAgICAgIGhlaWdodDogJHtidXR0b25TaXplW3NpemVdLmhlaWdodH07XG4gICAgICAgIHBhZGRpbmc6ICR7YnV0dG9uU2l6ZVtzaXplXS5wYWRkaW5nfTtcbiAgICBgO1xufTtcblxuZXhwb3J0IGNvbnN0IHNfdmFyaWFudCA9ICh2YXJpYW50OiBCdXR0b25WYXJpYW50KSA9PiB7XG4gICAgc3dpdGNoICh2YXJpYW50KSB7XG4gICAgICAgIGNhc2UgJ3ByaW1hcnknOlxuICAgICAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy5kZWZhdWx0fTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMud2hpdGV9O1xuICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnM7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmRlZmF1bHRIb3Zlcn07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYDtcbiAgICAgICAgY2FzZSAnb3V0bGluZWQnOlxuICAgICAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy53aGl0ZX07XG4gICAgICAgICAgICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzLmJsYWNrfTtcbiAgICAgICAgICAgICAgICBib3JkZXI6IDAuMXJlbSBzb2xpZCAke3RoZW1lLmNvbG9ycy5ncmF5WzUwMF19O1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4ycztcbiAgICAgICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzLmRlZmF1bHR9O1xuICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDAuMXJlbSBzb2xpZCAke3RoZW1lLmNvbG9ycy5kZWZhdWx0fTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgO1xuICAgICAgICBjYXNlICd0cmFuc3BhcmVudCc6XG4gICAgICAgICAgICByZXR1cm4gY3NzYFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMudGV4dEhlbHBlcn07XG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjJzO1xuICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy5ncmF5WzEwMF19O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGA7XG4gICAgICAgIGNhc2UgJ3RleHQnOlxuICAgICAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjJzO1xuICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMuZGVmYXVsdEhvdmVyfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy5kZWZhdWx0fTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMud2hpdGV9O1xuICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnM7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmRlZmF1bHRIb3Zlcn07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYDtcbiAgICB9XG59O1xuXG5leHBvcnQgY29uc3Qgc19iYXNlID0gKGJvcmRlclJhZGl1czogc3RyaW5nID0gJzAuNnJlbScsIHpJbmRleDogbnVtYmVyID0gMCkgPT4ge1xuICAgIHJldHVybiBjc3NgXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICBib3JkZXItcmFkaXVzOiAke2JvcmRlclJhZGl1c307XG4gICAgICAgIHotaW5kZXg6ICR7ekluZGV4fTtcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAmOmRpc2FibGVkIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmRpc2FibGVkfTtcbiAgICAgICAgICAgIGNvbG9yOiAke3RoZW1lLmNvbG9ycy53aGl0ZX07XG4gICAgICAgICAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgICAgICB9XG4gICAgICAgICY6ZGlzYWJsZWQ6aG92ZXIge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0aGVtZS5jb2xvcnMuZGlzYWJsZWR9O1xuICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgfVxuICAgIGA7XG59O1xuIl19 */");
    case 'text':
      return (0, _react.css)("background-color:transparent;border:none;transition:background-color 0.2s;&:hover{color:", _styles.default.colors.defaultHover, ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:s_variant;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9CdXR0b24vQnV0dG9uLnN0eWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlHc0IiLCJmaWxlIjoiLi4vLi4vLi4vc3JjL0J1dHRvbi9CdXR0b24uc3R5bGUudHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgdHlwZSB7IENTU09iamVjdCB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB0eXBlIHsgQ1NTUHJvcGVydGllcyB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHRoZW1lIGZyb20gJ0Bzc29jL3N0eWxlcyc7XG5cbmltcG9ydCB0eXBlIHsgQnV0dG9uU2l6ZSB9IGZyb20gJy4vQnV0dG9uJztcbmltcG9ydCB0eXBlIHsgQnV0dG9uVmFyaWFudCB9IGZyb20gJy4vQnV0dG9uJztcblxuaW50ZXJmYWNlIFR5cG9ncmFwaHkgZXh0ZW5kcyBDU1NPYmplY3Qge1xuICAgIGZvbnRTaXplOiBDU1NQcm9wZXJ0aWVzWydmb250U2l6ZSddO1xuICAgIGZvbnRXZWlnaHQ6IENTU1Byb3BlcnRpZXNbJ2ZvbnRXZWlnaHQnXTtcbiAgICBsaW5lSGVpZ2h0OiBDU1NQcm9wZXJ0aWVzWydsaW5lSGVpZ2h0J107XG59XG5pbnRlcmZhY2UgU2l6ZSB7XG4gICAgd2lkdGg/OiBDU1NQcm9wZXJ0aWVzWyd3aWR0aCddO1xuICAgIGhlaWdodD86IENTU1Byb3BlcnRpZXNbJ2hlaWdodCddO1xuICAgIHBhZGRpbmc6IENTU1Byb3BlcnRpZXNbJ3BhZGRpbmcnXTtcbiAgICB0eXBvZ3JhcGh5OiBUeXBvZ3JhcGh5O1xufVxuXG5leHBvcnQgY29uc3QgYnV0dG9uU2l6ZTogUmVjb3JkPEJ1dHRvblNpemUsIFNpemU+ID0ge1xuICAgIHhzOiB7XG4gICAgICAgIGhlaWdodDogJzJyZW0nLFxuICAgICAgICBwYWRkaW5nOiAnMC41cmVtJyxcbiAgICAgICAgdHlwb2dyYXBoeTogdGhlbWUudHlwb2dyYXBoeS5zdWJDYXB0aW9uUmVndWxhcixcbiAgICB9LFxuICAgIHM6IHtcbiAgICAgICAgaGVpZ2h0OiAnMi41cmVtJyxcbiAgICAgICAgcGFkZGluZzogJzAuNXJlbScsXG4gICAgICAgIHR5cG9ncmFwaHk6IHRoZW1lLnR5cG9ncmFwaHkuY2FwdGlvblJlZ3VsYXIsXG4gICAgfSxcbiAgICBtZDoge1xuICAgICAgICBoZWlnaHQ6ICcyLjdyZW0nLFxuICAgICAgICBwYWRkaW5nOiAnMC42cmVtJyxcbiAgICAgICAgdHlwb2dyYXBoeTogdGhlbWUudHlwb2dyYXBoeS5jYXB0aW9uUmVndWxhcixcbiAgICB9LFxuICAgIGxnOiB7XG4gICAgICAgIGhlaWdodDogJzNyZW0nLFxuICAgICAgICBwYWRkaW5nOiAnMC44cmVtJyxcbiAgICAgICAgdHlwb2dyYXBoeTogdGhlbWUudHlwb2dyYXBoeS5jYXB0aW9uUmVndWxhcixcbiAgICB9LFxuICAgIHhsOiB7XG4gICAgICAgIGhlaWdodDogJzMuNnJlbScsXG4gICAgICAgIHBhZGRpbmc6ICcxcmVtIDJyZW0nLFxuICAgICAgICB0eXBvZ3JhcGh5OiB0aGVtZS50eXBvZ3JhcGh5LmNhcHRpb25SZWd1bGFyLFxuICAgIH0sXG4gICAgZnVsbDoge1xuICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICBoZWlnaHQ6ICczLjZyZW0nLFxuICAgICAgICBwYWRkaW5nOiAnMC44cmVtJyxcbiAgICAgICAgdHlwb2dyYXBoeTogdGhlbWUudHlwb2dyYXBoeS5jYXB0aW9uUmVndWxhcixcbiAgICB9LFxufTtcbmV4cG9ydCBjb25zdCBzX3NpemUgPSAoc2l6ZTogQnV0dG9uU2l6ZSA9ICdtZCcpID0+IHtcbiAgICByZXR1cm4gY3NzYFxuICAgICAgICAke2J1dHRvblNpemVbc2l6ZV0udHlwb2dyYXBoeX1cbiAgICAgICAgd2lkdGg6ICR7YnV0dG9uU2l6ZVtzaXplXS53aWR0aH07XG4gICAgICAgIGhlaWdodDogJHtidXR0b25TaXplW3NpemVdLmhlaWdodH07XG4gICAgICAgIHBhZGRpbmc6ICR7YnV0dG9uU2l6ZVtzaXplXS5wYWRkaW5nfTtcbiAgICBgO1xufTtcblxuZXhwb3J0IGNvbnN0IHNfdmFyaWFudCA9ICh2YXJpYW50OiBCdXR0b25WYXJpYW50KSA9PiB7XG4gICAgc3dpdGNoICh2YXJpYW50KSB7XG4gICAgICAgIGNhc2UgJ3ByaW1hcnknOlxuICAgICAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy5kZWZhdWx0fTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMud2hpdGV9O1xuICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnM7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmRlZmF1bHRIb3Zlcn07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYDtcbiAgICAgICAgY2FzZSAnb3V0bGluZWQnOlxuICAgICAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy53aGl0ZX07XG4gICAgICAgICAgICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzLmJsYWNrfTtcbiAgICAgICAgICAgICAgICBib3JkZXI6IDAuMXJlbSBzb2xpZCAke3RoZW1lLmNvbG9ycy5ncmF5WzUwMF19O1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4ycztcbiAgICAgICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzLmRlZmF1bHR9O1xuICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDAuMXJlbSBzb2xpZCAke3RoZW1lLmNvbG9ycy5kZWZhdWx0fTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgO1xuICAgICAgICBjYXNlICd0cmFuc3BhcmVudCc6XG4gICAgICAgICAgICByZXR1cm4gY3NzYFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMudGV4dEhlbHBlcn07XG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjJzO1xuICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy5ncmF5WzEwMF19O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGA7XG4gICAgICAgIGNhc2UgJ3RleHQnOlxuICAgICAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjJzO1xuICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMuZGVmYXVsdEhvdmVyfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy5kZWZhdWx0fTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMud2hpdGV9O1xuICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnM7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmRlZmF1bHRIb3Zlcn07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYDtcbiAgICB9XG59O1xuXG5leHBvcnQgY29uc3Qgc19iYXNlID0gKGJvcmRlclJhZGl1czogc3RyaW5nID0gJzAuNnJlbScsIHpJbmRleDogbnVtYmVyID0gMCkgPT4ge1xuICAgIHJldHVybiBjc3NgXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICBib3JkZXItcmFkaXVzOiAke2JvcmRlclJhZGl1c307XG4gICAgICAgIHotaW5kZXg6ICR7ekluZGV4fTtcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAmOmRpc2FibGVkIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmRpc2FibGVkfTtcbiAgICAgICAgICAgIGNvbG9yOiAke3RoZW1lLmNvbG9ycy53aGl0ZX07XG4gICAgICAgICAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgICAgICB9XG4gICAgICAgICY6ZGlzYWJsZWQ6aG92ZXIge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0aGVtZS5jb2xvcnMuZGlzYWJsZWR9O1xuICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgfVxuICAgIGA7XG59O1xuIl19 */");
    default:
      return (0, _react.css)("background-color:", _styles.default.colors.default, ";color:", _styles.default.colors.white, ";border:none;transition:background-color 0.2s;&:hover{background-color:", _styles.default.colors.defaultHover, ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:s_variant;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9CdXR0b24vQnV0dG9uLnN0eWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTBHc0IiLCJmaWxlIjoiLi4vLi4vLi4vc3JjL0J1dHRvbi9CdXR0b24uc3R5bGUudHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgdHlwZSB7IENTU09iamVjdCB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB0eXBlIHsgQ1NTUHJvcGVydGllcyB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHRoZW1lIGZyb20gJ0Bzc29jL3N0eWxlcyc7XG5cbmltcG9ydCB0eXBlIHsgQnV0dG9uU2l6ZSB9IGZyb20gJy4vQnV0dG9uJztcbmltcG9ydCB0eXBlIHsgQnV0dG9uVmFyaWFudCB9IGZyb20gJy4vQnV0dG9uJztcblxuaW50ZXJmYWNlIFR5cG9ncmFwaHkgZXh0ZW5kcyBDU1NPYmplY3Qge1xuICAgIGZvbnRTaXplOiBDU1NQcm9wZXJ0aWVzWydmb250U2l6ZSddO1xuICAgIGZvbnRXZWlnaHQ6IENTU1Byb3BlcnRpZXNbJ2ZvbnRXZWlnaHQnXTtcbiAgICBsaW5lSGVpZ2h0OiBDU1NQcm9wZXJ0aWVzWydsaW5lSGVpZ2h0J107XG59XG5pbnRlcmZhY2UgU2l6ZSB7XG4gICAgd2lkdGg/OiBDU1NQcm9wZXJ0aWVzWyd3aWR0aCddO1xuICAgIGhlaWdodD86IENTU1Byb3BlcnRpZXNbJ2hlaWdodCddO1xuICAgIHBhZGRpbmc6IENTU1Byb3BlcnRpZXNbJ3BhZGRpbmcnXTtcbiAgICB0eXBvZ3JhcGh5OiBUeXBvZ3JhcGh5O1xufVxuXG5leHBvcnQgY29uc3QgYnV0dG9uU2l6ZTogUmVjb3JkPEJ1dHRvblNpemUsIFNpemU+ID0ge1xuICAgIHhzOiB7XG4gICAgICAgIGhlaWdodDogJzJyZW0nLFxuICAgICAgICBwYWRkaW5nOiAnMC41cmVtJyxcbiAgICAgICAgdHlwb2dyYXBoeTogdGhlbWUudHlwb2dyYXBoeS5zdWJDYXB0aW9uUmVndWxhcixcbiAgICB9LFxuICAgIHM6IHtcbiAgICAgICAgaGVpZ2h0OiAnMi41cmVtJyxcbiAgICAgICAgcGFkZGluZzogJzAuNXJlbScsXG4gICAgICAgIHR5cG9ncmFwaHk6IHRoZW1lLnR5cG9ncmFwaHkuY2FwdGlvblJlZ3VsYXIsXG4gICAgfSxcbiAgICBtZDoge1xuICAgICAgICBoZWlnaHQ6ICcyLjdyZW0nLFxuICAgICAgICBwYWRkaW5nOiAnMC42cmVtJyxcbiAgICAgICAgdHlwb2dyYXBoeTogdGhlbWUudHlwb2dyYXBoeS5jYXB0aW9uUmVndWxhcixcbiAgICB9LFxuICAgIGxnOiB7XG4gICAgICAgIGhlaWdodDogJzNyZW0nLFxuICAgICAgICBwYWRkaW5nOiAnMC44cmVtJyxcbiAgICAgICAgdHlwb2dyYXBoeTogdGhlbWUudHlwb2dyYXBoeS5jYXB0aW9uUmVndWxhcixcbiAgICB9LFxuICAgIHhsOiB7XG4gICAgICAgIGhlaWdodDogJzMuNnJlbScsXG4gICAgICAgIHBhZGRpbmc6ICcxcmVtIDJyZW0nLFxuICAgICAgICB0eXBvZ3JhcGh5OiB0aGVtZS50eXBvZ3JhcGh5LmNhcHRpb25SZWd1bGFyLFxuICAgIH0sXG4gICAgZnVsbDoge1xuICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICBoZWlnaHQ6ICczLjZyZW0nLFxuICAgICAgICBwYWRkaW5nOiAnMC44cmVtJyxcbiAgICAgICAgdHlwb2dyYXBoeTogdGhlbWUudHlwb2dyYXBoeS5jYXB0aW9uUmVndWxhcixcbiAgICB9LFxufTtcbmV4cG9ydCBjb25zdCBzX3NpemUgPSAoc2l6ZTogQnV0dG9uU2l6ZSA9ICdtZCcpID0+IHtcbiAgICByZXR1cm4gY3NzYFxuICAgICAgICAke2J1dHRvblNpemVbc2l6ZV0udHlwb2dyYXBoeX1cbiAgICAgICAgd2lkdGg6ICR7YnV0dG9uU2l6ZVtzaXplXS53aWR0aH07XG4gICAgICAgIGhlaWdodDogJHtidXR0b25TaXplW3NpemVdLmhlaWdodH07XG4gICAgICAgIHBhZGRpbmc6ICR7YnV0dG9uU2l6ZVtzaXplXS5wYWRkaW5nfTtcbiAgICBgO1xufTtcblxuZXhwb3J0IGNvbnN0IHNfdmFyaWFudCA9ICh2YXJpYW50OiBCdXR0b25WYXJpYW50KSA9PiB7XG4gICAgc3dpdGNoICh2YXJpYW50KSB7XG4gICAgICAgIGNhc2UgJ3ByaW1hcnknOlxuICAgICAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy5kZWZhdWx0fTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMud2hpdGV9O1xuICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnM7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmRlZmF1bHRIb3Zlcn07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYDtcbiAgICAgICAgY2FzZSAnb3V0bGluZWQnOlxuICAgICAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy53aGl0ZX07XG4gICAgICAgICAgICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzLmJsYWNrfTtcbiAgICAgICAgICAgICAgICBib3JkZXI6IDAuMXJlbSBzb2xpZCAke3RoZW1lLmNvbG9ycy5ncmF5WzUwMF19O1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4ycztcbiAgICAgICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzLmRlZmF1bHR9O1xuICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDAuMXJlbSBzb2xpZCAke3RoZW1lLmNvbG9ycy5kZWZhdWx0fTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgO1xuICAgICAgICBjYXNlICd0cmFuc3BhcmVudCc6XG4gICAgICAgICAgICByZXR1cm4gY3NzYFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMudGV4dEhlbHBlcn07XG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjJzO1xuICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy5ncmF5WzEwMF19O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGA7XG4gICAgICAgIGNhc2UgJ3RleHQnOlxuICAgICAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjJzO1xuICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMuZGVmYXVsdEhvdmVyfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy5kZWZhdWx0fTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMud2hpdGV9O1xuICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnM7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmRlZmF1bHRIb3Zlcn07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYDtcbiAgICB9XG59O1xuXG5leHBvcnQgY29uc3Qgc19iYXNlID0gKGJvcmRlclJhZGl1czogc3RyaW5nID0gJzAuNnJlbScsIHpJbmRleDogbnVtYmVyID0gMCkgPT4ge1xuICAgIHJldHVybiBjc3NgXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICBib3JkZXItcmFkaXVzOiAke2JvcmRlclJhZGl1c307XG4gICAgICAgIHotaW5kZXg6ICR7ekluZGV4fTtcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAmOmRpc2FibGVkIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmRpc2FibGVkfTtcbiAgICAgICAgICAgIGNvbG9yOiAke3RoZW1lLmNvbG9ycy53aGl0ZX07XG4gICAgICAgICAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgICAgICB9XG4gICAgICAgICY6ZGlzYWJsZWQ6aG92ZXIge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0aGVtZS5jb2xvcnMuZGlzYWJsZWR9O1xuICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgfVxuICAgIGA7XG59O1xuIl19 */");
  }
};
exports.s_variant = s_variant;
var s_base = exports.s_base = function s_base() {
  var borderRadius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '0.6rem';
  var zIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  return (0, _react.css)("display:flex;justify-content:center;align-items:center;box-sizing:border-box;border-radius:", borderRadius, ";z-index:", zIndex, ";white-space:nowrap;cursor:pointer;&:disabled{background-color:", _styles.default.colors.disabled, ";color:", _styles.default.colors.white, ";cursor:not-allowed;}&:disabled:hover{background-color:", _styles.default.colors.disabled, ";opacity:1;}" + (process.env.NODE_ENV === "production" ? "" : ";label:s_base;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9CdXR0b24vQnV0dG9uLnN0eWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXVIYyIsImZpbGUiOiIuLi8uLi8uLi9zcmMvQnV0dG9uL0J1dHRvbi5zdHlsZS50cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB0eXBlIHsgQ1NTT2JqZWN0IH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBDU1NQcm9wZXJ0aWVzIH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgdGhlbWUgZnJvbSAnQHNzb2Mvc3R5bGVzJztcblxuaW1wb3J0IHR5cGUgeyBCdXR0b25TaXplIH0gZnJvbSAnLi9CdXR0b24nO1xuaW1wb3J0IHR5cGUgeyBCdXR0b25WYXJpYW50IH0gZnJvbSAnLi9CdXR0b24nO1xuXG5pbnRlcmZhY2UgVHlwb2dyYXBoeSBleHRlbmRzIENTU09iamVjdCB7XG4gICAgZm9udFNpemU6IENTU1Byb3BlcnRpZXNbJ2ZvbnRTaXplJ107XG4gICAgZm9udFdlaWdodDogQ1NTUHJvcGVydGllc1snZm9udFdlaWdodCddO1xuICAgIGxpbmVIZWlnaHQ6IENTU1Byb3BlcnRpZXNbJ2xpbmVIZWlnaHQnXTtcbn1cbmludGVyZmFjZSBTaXplIHtcbiAgICB3aWR0aD86IENTU1Byb3BlcnRpZXNbJ3dpZHRoJ107XG4gICAgaGVpZ2h0PzogQ1NTUHJvcGVydGllc1snaGVpZ2h0J107XG4gICAgcGFkZGluZzogQ1NTUHJvcGVydGllc1sncGFkZGluZyddO1xuICAgIHR5cG9ncmFwaHk6IFR5cG9ncmFwaHk7XG59XG5cbmV4cG9ydCBjb25zdCBidXR0b25TaXplOiBSZWNvcmQ8QnV0dG9uU2l6ZSwgU2l6ZT4gPSB7XG4gICAgeHM6IHtcbiAgICAgICAgaGVpZ2h0OiAnMnJlbScsXG4gICAgICAgIHBhZGRpbmc6ICcwLjVyZW0nLFxuICAgICAgICB0eXBvZ3JhcGh5OiB0aGVtZS50eXBvZ3JhcGh5LnN1YkNhcHRpb25SZWd1bGFyLFxuICAgIH0sXG4gICAgczoge1xuICAgICAgICBoZWlnaHQ6ICcyLjVyZW0nLFxuICAgICAgICBwYWRkaW5nOiAnMC41cmVtJyxcbiAgICAgICAgdHlwb2dyYXBoeTogdGhlbWUudHlwb2dyYXBoeS5jYXB0aW9uUmVndWxhcixcbiAgICB9LFxuICAgIG1kOiB7XG4gICAgICAgIGhlaWdodDogJzIuN3JlbScsXG4gICAgICAgIHBhZGRpbmc6ICcwLjZyZW0nLFxuICAgICAgICB0eXBvZ3JhcGh5OiB0aGVtZS50eXBvZ3JhcGh5LmNhcHRpb25SZWd1bGFyLFxuICAgIH0sXG4gICAgbGc6IHtcbiAgICAgICAgaGVpZ2h0OiAnM3JlbScsXG4gICAgICAgIHBhZGRpbmc6ICcwLjhyZW0nLFxuICAgICAgICB0eXBvZ3JhcGh5OiB0aGVtZS50eXBvZ3JhcGh5LmNhcHRpb25SZWd1bGFyLFxuICAgIH0sXG4gICAgeGw6IHtcbiAgICAgICAgaGVpZ2h0OiAnMy42cmVtJyxcbiAgICAgICAgcGFkZGluZzogJzFyZW0gMnJlbScsXG4gICAgICAgIHR5cG9ncmFwaHk6IHRoZW1lLnR5cG9ncmFwaHkuY2FwdGlvblJlZ3VsYXIsXG4gICAgfSxcbiAgICBmdWxsOiB7XG4gICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgIGhlaWdodDogJzMuNnJlbScsXG4gICAgICAgIHBhZGRpbmc6ICcwLjhyZW0nLFxuICAgICAgICB0eXBvZ3JhcGh5OiB0aGVtZS50eXBvZ3JhcGh5LmNhcHRpb25SZWd1bGFyLFxuICAgIH0sXG59O1xuZXhwb3J0IGNvbnN0IHNfc2l6ZSA9IChzaXplOiBCdXR0b25TaXplID0gJ21kJykgPT4ge1xuICAgIHJldHVybiBjc3NgXG4gICAgICAgICR7YnV0dG9uU2l6ZVtzaXplXS50eXBvZ3JhcGh5fVxuICAgICAgICB3aWR0aDogJHtidXR0b25TaXplW3NpemVdLndpZHRofTtcbiAgICAgICAgaGVpZ2h0OiAke2J1dHRvblNpemVbc2l6ZV0uaGVpZ2h0fTtcbiAgICAgICAgcGFkZGluZzogJHtidXR0b25TaXplW3NpemVdLnBhZGRpbmd9O1xuICAgIGA7XG59O1xuXG5leHBvcnQgY29uc3Qgc192YXJpYW50ID0gKHZhcmlhbnQ6IEJ1dHRvblZhcmlhbnQpID0+IHtcbiAgICBzd2l0Y2ggKHZhcmlhbnQpIHtcbiAgICAgICAgY2FzZSAncHJpbWFyeSc6XG4gICAgICAgICAgICByZXR1cm4gY3NzYFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmRlZmF1bHR9O1xuICAgICAgICAgICAgICAgIGNvbG9yOiAke3RoZW1lLmNvbG9ycy53aGl0ZX07XG4gICAgICAgICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4ycztcbiAgICAgICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0aGVtZS5jb2xvcnMuZGVmYXVsdEhvdmVyfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgO1xuICAgICAgICBjYXNlICdvdXRsaW5lZCc6XG4gICAgICAgICAgICByZXR1cm4gY3NzYFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLndoaXRlfTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMuYmxhY2t9O1xuICAgICAgICAgICAgICAgIGJvcmRlcjogMC4xcmVtIHNvbGlkICR7dGhlbWUuY29sb3JzLmdyYXlbNTAwXX07XG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjJzO1xuICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMuZGVmYXVsdH07XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlcjogMC4xcmVtIHNvbGlkICR7dGhlbWUuY29sb3JzLmRlZmF1bHR9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGA7XG4gICAgICAgIGNhc2UgJ3RyYW5zcGFyZW50JzpcbiAgICAgICAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAgICAgICAgIGNvbG9yOiAke3RoZW1lLmNvbG9ycy50ZXh0SGVscGVyfTtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnM7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmdyYXlbMTAwXX07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYDtcbiAgICAgICAgY2FzZSAndGV4dCc6XG4gICAgICAgICAgICByZXR1cm4gY3NzYFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnM7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAke3RoZW1lLmNvbG9ycy5kZWZhdWx0SG92ZXJ9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGA7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gY3NzYFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmRlZmF1bHR9O1xuICAgICAgICAgICAgICAgIGNvbG9yOiAke3RoZW1lLmNvbG9ycy53aGl0ZX07XG4gICAgICAgICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4ycztcbiAgICAgICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0aGVtZS5jb2xvcnMuZGVmYXVsdEhvdmVyfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgO1xuICAgIH1cbn07XG5cbmV4cG9ydCBjb25zdCBzX2Jhc2UgPSAoYm9yZGVyUmFkaXVzOiBzdHJpbmcgPSAnMC42cmVtJywgekluZGV4OiBudW1iZXIgPSAwKSA9PiB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6ICR7Ym9yZGVyUmFkaXVzfTtcbiAgICAgICAgei1pbmRleDogJHt6SW5kZXh9O1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICY6ZGlzYWJsZWQge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0aGVtZS5jb2xvcnMuZGlzYWJsZWR9O1xuICAgICAgICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzLndoaXRlfTtcbiAgICAgICAgICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XG4gICAgICAgIH1cbiAgICAgICAgJjpkaXNhYmxlZDpob3ZlciB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy5kaXNhYmxlZH07XG4gICAgICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICB9XG4gICAgYDtcbn07XG4iXX0= */");
};