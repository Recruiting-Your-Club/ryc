"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toastStyle = exports.svgStyle = exports.progressBarStyle = exports.ContainerPosition = exports.Container = void 0;
var _react = require("@emotion/react");
var _styles = _interopRequireDefault(require("@ssoc/styles"));
var _templateObject, _templateObject2, _templateObject3;
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _taggedTemplateLiteral(e, t) { return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } })); }
function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }
var getColorByTypeAtColoredTheme = type => {
  switch (type) {
    case 'error':
      return _styles.default.colors.red[800];
    case 'success':
      return _styles.default.colors.green[200];
    case 'info':
      return _styles.default.colors.default;
    default:
      return _styles.default.colors.white;
  }
};
var getToastBackgroundStyles = (type, toastTheme) => {
  switch (toastTheme) {
    case 'white':
      return (0, _react.css)("background-color:", _styles.default.colors.white, ";color:", _styles.default.colors.black, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getToastBackgroundStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
    case 'black':
      return (0, _react.css)("background-color:", _styles.default.colors.black, ";color:", _styles.default.colors.white, ";", type === 'default' && "color: ".concat(_styles.default.colors.white, ";"), ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getToastBackgroundStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
    case 'colored':
      return (0, _react.css)("background-color:", getColorByTypeAtColoredTheme(type), ";color:", _styles.default.colors.white, ";", type === 'default' && "color: ".concat(_styles.default.colors.black, ";"), ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getToastBackgroundStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
    default:
      return (0, _react.css)("background-color:", _styles.default.colors.white, ";color:", _styles.default.colors.black, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getToastBackgroundStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
  }
};
var svgColor = type => {
  switch (type) {
    case 'info':
      return (0, _react.css)("stroke:", _styles.default.colors.blue[300], ";fill:", _styles.default.colors.white, ";color:", _styles.default.colors.blue[300], ";" + (process.env.NODE_ENV === "production" ? "" : ";label:svgColor;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
    case 'success':
      return (0, _react.css)("stroke:", _styles.default.colors.green[200], ";fill:", _styles.default.colors.white, ";color:", _styles.default.colors.green[200], ";" + (process.env.NODE_ENV === "production" ? "" : ";label:svgColor;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9Ub2FzdC9Ub2FzdC5zdHlsZS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeURzQiIsImZpbGUiOiIuLi8uLi8uLi9zcmMvVG9hc3QvVG9hc3Quc3R5bGUudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgdGhlbWUgZnJvbSAnQHNzb2Mvc3R5bGVzJztcbmltcG9ydCB0eXBlIHsgQ1NTT2JqZWN0IH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBUb2FzdFBvc2l0aW9uLCBUb2FzdFRoZW1lLCBUeXBlLCBUeXBlQ29sb3IgfSBmcm9tICcuL3R5cGUnO1xuXG4vLyBjb2xvcmVk7J28IOuVjCDthYzrp4jsl5Ag65Sw66W4IOyDieyDgSDstpTstpxcbmNvbnN0IGdldENvbG9yQnlUeXBlQXRDb2xvcmVkVGhlbWUgPSAodHlwZTogVHlwZSk6IHN0cmluZyA9PiB7XG4gICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgIGNhc2UgJ2Vycm9yJzpcbiAgICAgICAgICAgIHJldHVybiB0aGVtZS5jb2xvcnMucmVkWzgwMF07XG4gICAgICAgIGNhc2UgJ3N1Y2Nlc3MnOlxuICAgICAgICAgICAgcmV0dXJuIHRoZW1lLmNvbG9ycy5ncmVlblsyMDBdO1xuICAgICAgICBjYXNlICdpbmZvJzpcbiAgICAgICAgICAgIHJldHVybiB0aGVtZS5jb2xvcnMuZGVmYXVsdDtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiB0aGVtZS5jb2xvcnMud2hpdGU7XG4gICAgfVxufTtcblxuLy8g7Yag7Iqk7Yq4IO2FjOuniOyXkCDrlLDrpbgg67Cw6rK97IOJIOuwjyDquIDsnpDsg4kg7LaU7LacXG5jb25zdCBnZXRUb2FzdEJhY2tncm91bmRTdHlsZXMgPSAodHlwZTogVHlwZSwgdG9hc3RUaGVtZTogVG9hc3RUaGVtZSkgPT4ge1xuICAgIHN3aXRjaCAodG9hc3RUaGVtZSkge1xuICAgICAgICBjYXNlICd3aGl0ZSc6XG4gICAgICAgICAgICByZXR1cm4gY3NzYFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLndoaXRlfTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMuYmxhY2t9O1xuICAgICAgICAgICAgYDtcbiAgICAgICAgY2FzZSAnYmxhY2snOlxuICAgICAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy5ibGFja307XG4gICAgICAgICAgICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzLndoaXRlfTtcbiAgICAgICAgICAgICAgICAke3R5cGUgPT09ICdkZWZhdWx0JyAmJiBgY29sb3I6ICR7dGhlbWUuY29sb3JzLndoaXRlfTtgfVxuICAgICAgICAgICAgYDtcbiAgICAgICAgY2FzZSAnY29sb3JlZCc6XG4gICAgICAgICAgICByZXR1cm4gY3NzYFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Z2V0Q29sb3JCeVR5cGVBdENvbG9yZWRUaGVtZSh0eXBlKX07XG4gICAgICAgICAgICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzLndoaXRlfTtcbiAgICAgICAgICAgICAgICAke3R5cGUgPT09ICdkZWZhdWx0JyAmJiBgY29sb3I6ICR7dGhlbWUuY29sb3JzLmJsYWNrfTtgfVxuICAgICAgICAgICAgYDtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0aGVtZS5jb2xvcnMud2hpdGV9O1xuICAgICAgICAgICAgICAgIGNvbG9yOiAke3RoZW1lLmNvbG9ycy5ibGFja307XG4gICAgICAgICAgICBgO1xuICAgIH1cbn07XG5cbi8vIO2DgOyeheyXkCDrlLDrpbggc3ZnIOy7rOufrCDstpTstpxcbmNvbnN0IHN2Z0NvbG9yID0gKHR5cGU6IFR5cGUpID0+IHtcbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICAgY2FzZSAnaW5mbyc6XG4gICAgICAgICAgICByZXR1cm4gY3NzYFxuICAgICAgICAgICAgICAgIHN0cm9rZTogJHt0aGVtZS5jb2xvcnMuYmx1ZVszMDBdfTtcbiAgICAgICAgICAgICAgICBmaWxsOiAke3RoZW1lLmNvbG9ycy53aGl0ZX07XG4gICAgICAgICAgICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzLmJsdWVbMzAwXX07XG4gICAgICAgICAgICBgO1xuICAgICAgICBjYXNlICdzdWNjZXNzJzpcbiAgICAgICAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICAgICAgICAgc3Ryb2tlOiAke3RoZW1lLmNvbG9ycy5ncmVlblsyMDBdfTtcbiAgICAgICAgICAgICAgICBmaWxsOiAke3RoZW1lLmNvbG9ycy53aGl0ZX07XG4gICAgICAgICAgICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzLmdyZWVuWzIwMF19O1xuICAgICAgICAgICAgYDtcbiAgICAgICAgY2FzZSAnZXJyb3InOlxuICAgICAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgICAgICBzdHJva2U6ICR7dGhlbWUuY29sb3JzLnJlZFs4MDBdfTtcbiAgICAgICAgICAgICAgICBmaWxsOiAke3RoZW1lLmNvbG9ycy53aGl0ZX07XG4gICAgICAgICAgICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzLnJlZFs4MDBdfTtcbiAgICAgICAgICAgIGA7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gY3NzYFxuICAgICAgICAgICAgICAgIGNvbG9yOiAke3RoZW1lLmNvbG9ycy5ibGFja307XG4gICAgICAgICAgICBgO1xuICAgIH1cbn07XG5cbmNvbnN0IFRvYXN0VHlwZTogUmVjb3JkPFR5cGUsIFR5cGVDb2xvcj4gPSB7XG4gICAgaW5mbzoge1xuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9ycy5ibHVlWzMwMF0sXG4gICAgICAgIGNvbG9yZWRCYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9ycy5ibHVlWzIwMF0sXG4gICAgfSxcbiAgICBzdWNjZXNzOiB7XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUuY29sb3JzLmdyZWVuWzIwMF0sXG4gICAgICAgIGNvbG9yZWRCYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9ycy5ncmVlblsxMDBdLFxuICAgIH0sXG4gICAgZXJyb3I6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5jb2xvcnMucmVkWzgwMF0sXG4gICAgICAgIGNvbG9yZWRCYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9ycy5yZWRbNjAwXSxcbiAgICB9LFxuICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5jb2xvcnMud2hpdGUsXG4gICAgICAgIGNvbG9yZWRCYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9ycy5ibGFjayxcbiAgICB9LFxufTtcblxuY29uc3QgcHJvZ3Jlc3NCYXJDb2xvciA9ICh0b2FzdFRoZW1lOiBUb2FzdFRoZW1lLCB0eXBlOiBUeXBlKSA9PiB7XG4gICAgaWYgKHRvYXN0VGhlbWUgPT09ICdjb2xvcmVkJykge1xuICAgICAgICByZXR1cm4gY3NzYFxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtUb2FzdFR5cGVbdHlwZV0uY29sb3JlZEJhY2tncm91bmRDb2xvcn07XG4gICAgICAgIGA7XG4gICAgfVxuICAgIGlmICh0b2FzdFRoZW1lID09PSAnYmxhY2snICYmIHR5cGUgPT09ICdkZWZhdWx0Jykge1xuICAgICAgICByZXR1cm4gY3NzYFxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtUb2FzdFR5cGVbdHlwZV0uYmFja2dyb3VuZENvbG9yfTtcbiAgICAgICAgYDtcbiAgICB9XG4gICAgaWYgKHRvYXN0VGhlbWUgPT09ICd3aGl0ZScgJiYgdHlwZSA9PT0gJ2RlZmF1bHQnKSB7XG4gICAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke1RvYXN0VHlwZVt0eXBlXS5jb2xvcmVkQmFja2dyb3VuZENvbG9yfTtcbiAgICAgICAgYDtcbiAgICB9XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtUb2FzdFR5cGVbdHlwZV0uYmFja2dyb3VuZENvbG9yfTtcbiAgICBgO1xufTtcblxuY29uc3QgdG9hc3RGYWRlSW4gPSBrZXlmcmFtZXNgXG4gICAgZnJvbSB7XG4gICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgycmVtKTtcbiAgICB9XG4gICAgdG8ge1xuICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgfVxuYDtcblxuY29uc3QgdG9hc3RGYWRlT3V0ID0ga2V5ZnJhbWVzYFxuICAgIGZyb20ge1xuICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgfVxuICAgIHRvIHtcbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0ycmVtKTtcbiAgICB9XG5gO1xuXG5jb25zdCBwcm9ncmVzc0JhckFuaW1hdGlvbiA9IGtleWZyYW1lc2BcbiAgICAwJSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbiAgICAxMDAlIHtcbiAgICAgICAgd2lkdGg6IDAlO1xuICAgIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBDb250YWluZXIgPSBjc3NgXG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHBhZGRpbmc6IDAuNHJlbSAwLjRyZW07XG5gO1xuXG5leHBvcnQgY29uc3QgQ29udGFpbmVyUG9zaXRpb246IFJlY29yZDxUb2FzdFBvc2l0aW9uLCBDU1NPYmplY3Q+ID0ge1xuICAgIHRvcFJpZ2h0OiB7XG4gICAgICAgIHRvcDogJzJyZW0nLFxuICAgICAgICByaWdodDogJzJyZW0nLFxuICAgIH0sXG4gICAgdG9wQ2VudGVyOiB7XG4gICAgICAgIHRvcDogJzJyZW0nLFxuICAgICAgICBsZWZ0OiAnNTAlJyxcbiAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlWCgtNTAlKScsXG4gICAgfSxcbiAgICB0b3BMZWZ0OiB7XG4gICAgICAgIHRvcDogJzJyZW0nLFxuICAgICAgICBsZWZ0OiAnMnJlbScsXG4gICAgfSxcbiAgICBib3R0b21SaWdodDoge1xuICAgICAgICBib3R0b206ICcycmVtJyxcbiAgICAgICAgcmlnaHQ6ICcycmVtJyxcbiAgICB9LFxuICAgIGJvdHRvbUNlbnRlcjoge1xuICAgICAgICBib3R0b206ICcycmVtJyxcbiAgICAgICAgbGVmdDogJzUwJScsXG4gICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVgoLTUwJSknLFxuICAgIH0sXG4gICAgYm90dG9tTGVmdDoge1xuICAgICAgICBib3R0b206ICcycmVtJyxcbiAgICAgICAgbGVmdDogJzJyZW0nLFxuICAgIH0sXG59O1xuXG5leHBvcnQgY29uc3QgdG9hc3RTdHlsZSA9IChzdGF0dXM6IHN0cmluZywgdG9hc3RUaGVtZTogVG9hc3RUaGVtZSwgdHlwZTogVHlwZSkgPT4gY3NzYFxuICAgICR7Z2V0VG9hc3RCYWNrZ3JvdW5kU3R5bGVzKHR5cGUsIHRvYXN0VGhlbWUpfVxuICAgICR7dGhlbWUudHlwb2dyYXBoeS5ib2R5U2VtaWJvbGR9XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHN0YXJ0O1xuICAgIHBhZGRpbmc6IDFyZW0gMXJlbTtcbiAgICBnYXA6IDAuNXJlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBtaW4td2lkdGg6IDMwcmVtO1xuICAgIG1pbi1oZWlnaHQ6IDVyZW07XG4gICAgYm94LXNoYWRvdzogMCA0cHggMTJweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xuICAgIGFuaW1hdGlvbjogJHtzdGF0dXMgPT09ICdlbnRlcmluZycgPyB0b2FzdEZhZGVJbiA6IHN0YXR1cyA9PT0gJ2V4aXRpbmcnID8gdG9hc3RGYWRlT3V0IDogJ25vbmUnfVxuICAgICAgICAxMDAwbXMgZWFzZSBmb3J3YXJkcztcbmA7XG5cbmV4cG9ydCBjb25zdCBzdmdTdHlsZSA9ICh0eXBlOiBUeXBlKSA9PiBjc3NgXG4gICAgd2lkdGg6IDJyZW07XG4gICAgaGVpZ2h0OiAycmVtO1xuICAgICR7c3ZnQ29sb3IodHlwZSl9XG5gO1xuXG5leHBvcnQgY29uc3QgcHJvZ3Jlc3NCYXJTdHlsZSA9ICh0b2FzdFRoZW1lOiBUb2FzdFRoZW1lLCB0eXBlOiBUeXBlLCBkdXJhdGlvbjogbnVtYmVyKSA9PiBjc3NgXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMDtcbiAgICBsZWZ0OiAwLjFyZW07XG4gICAgYm9yZGVyLXJhZGl1czogMCAwIDAgN3B4O1xuICAgIGhlaWdodDogMC4zcmVtO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgICR7cHJvZ3Jlc3NCYXJDb2xvcih0b2FzdFRoZW1lLCB0eXBlKX1cbiAgICBhbmltYXRpb246ICR7cHJvZ3Jlc3NCYXJBbmltYXRpb259ICR7ZHVyYXRpb259bXMgbGluZWFyIGZvcndhcmRzO1xuYDtcbiJdfQ== */");
    case 'error':
      return (0, _react.css)("stroke:", _styles.default.colors.red[800], ";fill:", _styles.default.colors.white, ";color:", _styles.default.colors.red[800], ";" + (process.env.NODE_ENV === "production" ? "" : ";label:svgColor;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
    default:
      return (0, _react.css)("color:", _styles.default.colors.black, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:svgColor;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
  }
};
var ToastType = {
  info: {
    backgroundColor: _styles.default.colors.blue[300],
    coloredBackgroundColor: _styles.default.colors.blue[200]
  },
  success: {
    backgroundColor: _styles.default.colors.green[200],
    coloredBackgroundColor: _styles.default.colors.green[100]
  },
  error: {
    backgroundColor: _styles.default.colors.red[800],
    coloredBackgroundColor: _styles.default.colors.red[600]
  },
  default: {
    backgroundColor: _styles.default.colors.white,
    coloredBackgroundColor: _styles.default.colors.black
  }
};
var progressBarColor = (toastTheme, type) => {
  if (toastTheme === 'colored') {
    return (0, _react.css)("background-color:", ToastType[type].coloredBackgroundColor, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:progressBarColor;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
  }
  if (toastTheme === 'black' && type === 'default') {
    return (0, _react.css)("background-color:", ToastType[type].backgroundColor, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:progressBarColor;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
  }
  if (toastTheme === 'white' && type === 'default') {
    return (0, _react.css)("background-color:", ToastType[type].coloredBackgroundColor, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:progressBarColor;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
  }
  return (0, _react.css)("background-color:", ToastType[type].backgroundColor, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:progressBarColor;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9Ub2FzdC9Ub2FzdC5zdHlsZS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBOEdjIiwiZmlsZSI6Ii4uLy4uLy4uL3NyYy9Ub2FzdC9Ub2FzdC5zdHlsZS50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MsIGtleWZyYW1lcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB0aGVtZSBmcm9tICdAc3NvYy9zdHlsZXMnO1xuaW1wb3J0IHR5cGUgeyBDU1NPYmplY3QgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgdHlwZSB7IFRvYXN0UG9zaXRpb24sIFRvYXN0VGhlbWUsIFR5cGUsIFR5cGVDb2xvciB9IGZyb20gJy4vdHlwZSc7XG5cbi8vIGNvbG9yZWTsnbwg65WMIO2FjOuniOyXkCDrlLDrpbgg7IOJ7IOBIOy2lOy2nFxuY29uc3QgZ2V0Q29sb3JCeVR5cGVBdENvbG9yZWRUaGVtZSA9ICh0eXBlOiBUeXBlKTogc3RyaW5nID0+IHtcbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICAgY2FzZSAnZXJyb3InOlxuICAgICAgICAgICAgcmV0dXJuIHRoZW1lLmNvbG9ycy5yZWRbODAwXTtcbiAgICAgICAgY2FzZSAnc3VjY2Vzcyc6XG4gICAgICAgICAgICByZXR1cm4gdGhlbWUuY29sb3JzLmdyZWVuWzIwMF07XG4gICAgICAgIGNhc2UgJ2luZm8nOlxuICAgICAgICAgICAgcmV0dXJuIHRoZW1lLmNvbG9ycy5kZWZhdWx0O1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIHRoZW1lLmNvbG9ycy53aGl0ZTtcbiAgICB9XG59O1xuXG4vLyDthqDsiqTtirgg7YWM66eI7JeQIOuUsOuluCDrsLDqsr3sg4kg67CPIOq4gOyekOyDiSDstpTstpxcbmNvbnN0IGdldFRvYXN0QmFja2dyb3VuZFN0eWxlcyA9ICh0eXBlOiBUeXBlLCB0b2FzdFRoZW1lOiBUb2FzdFRoZW1lKSA9PiB7XG4gICAgc3dpdGNoICh0b2FzdFRoZW1lKSB7XG4gICAgICAgIGNhc2UgJ3doaXRlJzpcbiAgICAgICAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0aGVtZS5jb2xvcnMud2hpdGV9O1xuICAgICAgICAgICAgICAgIGNvbG9yOiAke3RoZW1lLmNvbG9ycy5ibGFja307XG4gICAgICAgICAgICBgO1xuICAgICAgICBjYXNlICdibGFjayc6XG4gICAgICAgICAgICByZXR1cm4gY3NzYFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmJsYWNrfTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMud2hpdGV9O1xuICAgICAgICAgICAgICAgICR7dHlwZSA9PT0gJ2RlZmF1bHQnICYmIGBjb2xvcjogJHt0aGVtZS5jb2xvcnMud2hpdGV9O2B9XG4gICAgICAgICAgICBgO1xuICAgICAgICBjYXNlICdjb2xvcmVkJzpcbiAgICAgICAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtnZXRDb2xvckJ5VHlwZUF0Q29sb3JlZFRoZW1lKHR5cGUpfTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMud2hpdGV9O1xuICAgICAgICAgICAgICAgICR7dHlwZSA9PT0gJ2RlZmF1bHQnICYmIGBjb2xvcjogJHt0aGVtZS5jb2xvcnMuYmxhY2t9O2B9XG4gICAgICAgICAgICBgO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy53aGl0ZX07XG4gICAgICAgICAgICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzLmJsYWNrfTtcbiAgICAgICAgICAgIGA7XG4gICAgfVxufTtcblxuLy8g7YOA7J6F7JeQIOuUsOuluCBzdmcg7Lus65+sIOy2lOy2nFxuY29uc3Qgc3ZnQ29sb3IgPSAodHlwZTogVHlwZSkgPT4ge1xuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICBjYXNlICdpbmZvJzpcbiAgICAgICAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICAgICAgICAgc3Ryb2tlOiAke3RoZW1lLmNvbG9ycy5ibHVlWzMwMF19O1xuICAgICAgICAgICAgICAgIGZpbGw6ICR7dGhlbWUuY29sb3JzLndoaXRlfTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMuYmx1ZVszMDBdfTtcbiAgICAgICAgICAgIGA7XG4gICAgICAgIGNhc2UgJ3N1Y2Nlc3MnOlxuICAgICAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgICAgICBzdHJva2U6ICR7dGhlbWUuY29sb3JzLmdyZWVuWzIwMF19O1xuICAgICAgICAgICAgICAgIGZpbGw6ICR7dGhlbWUuY29sb3JzLndoaXRlfTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMuZ3JlZW5bMjAwXX07XG4gICAgICAgICAgICBgO1xuICAgICAgICBjYXNlICdlcnJvcic6XG4gICAgICAgICAgICByZXR1cm4gY3NzYFxuICAgICAgICAgICAgICAgIHN0cm9rZTogJHt0aGVtZS5jb2xvcnMucmVkWzgwMF19O1xuICAgICAgICAgICAgICAgIGZpbGw6ICR7dGhlbWUuY29sb3JzLndoaXRlfTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMucmVkWzgwMF19O1xuICAgICAgICAgICAgYDtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICAgICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzLmJsYWNrfTtcbiAgICAgICAgICAgIGA7XG4gICAgfVxufTtcblxuY29uc3QgVG9hc3RUeXBlOiBSZWNvcmQ8VHlwZSwgVHlwZUNvbG9yPiA9IHtcbiAgICBpbmZvOiB7XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUuY29sb3JzLmJsdWVbMzAwXSxcbiAgICAgICAgY29sb3JlZEJhY2tncm91bmRDb2xvcjogdGhlbWUuY29sb3JzLmJsdWVbMjAwXSxcbiAgICB9LFxuICAgIHN1Y2Nlc3M6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5jb2xvcnMuZ3JlZW5bMjAwXSxcbiAgICAgICAgY29sb3JlZEJhY2tncm91bmRDb2xvcjogdGhlbWUuY29sb3JzLmdyZWVuWzEwMF0sXG4gICAgfSxcbiAgICBlcnJvcjoge1xuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9ycy5yZWRbODAwXSxcbiAgICAgICAgY29sb3JlZEJhY2tncm91bmRDb2xvcjogdGhlbWUuY29sb3JzLnJlZFs2MDBdLFxuICAgIH0sXG4gICAgZGVmYXVsdDoge1xuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9ycy53aGl0ZSxcbiAgICAgICAgY29sb3JlZEJhY2tncm91bmRDb2xvcjogdGhlbWUuY29sb3JzLmJsYWNrLFxuICAgIH0sXG59O1xuXG5jb25zdCBwcm9ncmVzc0JhckNvbG9yID0gKHRvYXN0VGhlbWU6IFRvYXN0VGhlbWUsIHR5cGU6IFR5cGUpID0+IHtcbiAgICBpZiAodG9hc3RUaGVtZSA9PT0gJ2NvbG9yZWQnKSB7XG4gICAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke1RvYXN0VHlwZVt0eXBlXS5jb2xvcmVkQmFja2dyb3VuZENvbG9yfTtcbiAgICAgICAgYDtcbiAgICB9XG4gICAgaWYgKHRvYXN0VGhlbWUgPT09ICdibGFjaycgJiYgdHlwZSA9PT0gJ2RlZmF1bHQnKSB7XG4gICAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke1RvYXN0VHlwZVt0eXBlXS5iYWNrZ3JvdW5kQ29sb3J9O1xuICAgICAgICBgO1xuICAgIH1cbiAgICBpZiAodG9hc3RUaGVtZSA9PT0gJ3doaXRlJyAmJiB0eXBlID09PSAnZGVmYXVsdCcpIHtcbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7VG9hc3RUeXBlW3R5cGVdLmNvbG9yZWRCYWNrZ3JvdW5kQ29sb3J9O1xuICAgICAgICBgO1xuICAgIH1cbiAgICByZXR1cm4gY3NzYFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke1RvYXN0VHlwZVt0eXBlXS5iYWNrZ3JvdW5kQ29sb3J9O1xuICAgIGA7XG59O1xuXG5jb25zdCB0b2FzdEZhZGVJbiA9IGtleWZyYW1lc2BcbiAgICBmcm9tIHtcbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDJyZW0pO1xuICAgIH1cbiAgICB0byB7XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICB9XG5gO1xuXG5jb25zdCB0b2FzdEZhZGVPdXQgPSBrZXlmcmFtZXNgXG4gICAgZnJvbSB7XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICB9XG4gICAgdG8ge1xuICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTJyZW0pO1xuICAgIH1cbmA7XG5cbmNvbnN0IHByb2dyZXNzQmFyQW5pbWF0aW9uID0ga2V5ZnJhbWVzYFxuICAgIDAlIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuICAgIDEwMCUge1xuICAgICAgICB3aWR0aDogMCU7XG4gICAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IENvbnRhaW5lciA9IGNzc2BcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgcGFkZGluZzogMC40cmVtIDAuNHJlbTtcbmA7XG5cbmV4cG9ydCBjb25zdCBDb250YWluZXJQb3NpdGlvbjogUmVjb3JkPFRvYXN0UG9zaXRpb24sIENTU09iamVjdD4gPSB7XG4gICAgdG9wUmlnaHQ6IHtcbiAgICAgICAgdG9wOiAnMnJlbScsXG4gICAgICAgIHJpZ2h0OiAnMnJlbScsXG4gICAgfSxcbiAgICB0b3BDZW50ZXI6IHtcbiAgICAgICAgdG9wOiAnMnJlbScsXG4gICAgICAgIGxlZnQ6ICc1MCUnLFxuICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKC01MCUpJyxcbiAgICB9LFxuICAgIHRvcExlZnQ6IHtcbiAgICAgICAgdG9wOiAnMnJlbScsXG4gICAgICAgIGxlZnQ6ICcycmVtJyxcbiAgICB9LFxuICAgIGJvdHRvbVJpZ2h0OiB7XG4gICAgICAgIGJvdHRvbTogJzJyZW0nLFxuICAgICAgICByaWdodDogJzJyZW0nLFxuICAgIH0sXG4gICAgYm90dG9tQ2VudGVyOiB7XG4gICAgICAgIGJvdHRvbTogJzJyZW0nLFxuICAgICAgICBsZWZ0OiAnNTAlJyxcbiAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlWCgtNTAlKScsXG4gICAgfSxcbiAgICBib3R0b21MZWZ0OiB7XG4gICAgICAgIGJvdHRvbTogJzJyZW0nLFxuICAgICAgICBsZWZ0OiAnMnJlbScsXG4gICAgfSxcbn07XG5cbmV4cG9ydCBjb25zdCB0b2FzdFN0eWxlID0gKHN0YXR1czogc3RyaW5nLCB0b2FzdFRoZW1lOiBUb2FzdFRoZW1lLCB0eXBlOiBUeXBlKSA9PiBjc3NgXG4gICAgJHtnZXRUb2FzdEJhY2tncm91bmRTdHlsZXModHlwZSwgdG9hc3RUaGVtZSl9XG4gICAgJHt0aGVtZS50eXBvZ3JhcGh5LmJvZHlTZW1pYm9sZH1cbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogc3RhcnQ7XG4gICAgcGFkZGluZzogMXJlbSAxcmVtO1xuICAgIGdhcDogMC41cmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIG1pbi13aWR0aDogMzByZW07XG4gICAgbWluLWhlaWdodDogNXJlbTtcbiAgICBib3gtc2hhZG93OiAwIDRweCAxMnB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gICAgYW5pbWF0aW9uOiAke3N0YXR1cyA9PT0gJ2VudGVyaW5nJyA/IHRvYXN0RmFkZUluIDogc3RhdHVzID09PSAnZXhpdGluZycgPyB0b2FzdEZhZGVPdXQgOiAnbm9uZSd9XG4gICAgICAgIDEwMDBtcyBlYXNlIGZvcndhcmRzO1xuYDtcblxuZXhwb3J0IGNvbnN0IHN2Z1N0eWxlID0gKHR5cGU6IFR5cGUpID0+IGNzc2BcbiAgICB3aWR0aDogMnJlbTtcbiAgICBoZWlnaHQ6IDJyZW07XG4gICAgJHtzdmdDb2xvcih0eXBlKX1cbmA7XG5cbmV4cG9ydCBjb25zdCBwcm9ncmVzc0JhclN0eWxlID0gKHRvYXN0VGhlbWU6IFRvYXN0VGhlbWUsIHR5cGU6IFR5cGUsIGR1cmF0aW9uOiBudW1iZXIpID0+IGNzc2BcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAwO1xuICAgIGxlZnQ6IDAuMXJlbTtcbiAgICBib3JkZXItcmFkaXVzOiAwIDAgMCA3cHg7XG4gICAgaGVpZ2h0OiAwLjNyZW07XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgJHtwcm9ncmVzc0JhckNvbG9yKHRvYXN0VGhlbWUsIHR5cGUpfVxuICAgIGFuaW1hdGlvbjogJHtwcm9ncmVzc0JhckFuaW1hdGlvbn0gJHtkdXJhdGlvbn1tcyBsaW5lYXIgZm9yd2FyZHM7XG5gO1xuIl19 */");
};
var toastFadeIn = (0, _react.keyframes)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n    from {\n        opacity: 0;\n        transform: translateY(2rem);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n"])));
var toastFadeOut = (0, _react.keyframes)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n    from {\n        opacity: 1;\n        transform: translateY(0);\n    }\n    to {\n        opacity: 0;\n        transform: translateY(-2rem);\n    }\n"])));
var progressBarAnimation = (0, _react.keyframes)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n    0% {\n        width: 100%;\n    }\n    100% {\n        width: 0%;\n    }\n"])));
var Container = exports.Container = process.env.NODE_ENV === "production" ? {
  name: "a24iqz",
  styles: "position:fixed;padding:0.4rem 0.4rem"
} : {
  name: "1ckjfdf-Container",
  styles: "position:fixed;padding:0.4rem 0.4rem;label:Container;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};
var ContainerPosition = exports.ContainerPosition = {
  topRight: {
    top: '2rem',
    right: '2rem'
  },
  topCenter: {
    top: '2rem',
    left: '50%',
    transform: 'translateX(-50%)'
  },
  topLeft: {
    top: '2rem',
    left: '2rem'
  },
  bottomRight: {
    bottom: '2rem',
    right: '2rem'
  },
  bottomCenter: {
    bottom: '2rem',
    left: '50%',
    transform: 'translateX(-50%)'
  },
  bottomLeft: {
    bottom: '2rem',
    left: '2rem'
  }
};
var toastStyle = (status, toastTheme, type) => (0, _react.css)(getToastBackgroundStyles(type, toastTheme), " ", _styles.default.typography.bodySemibold, " position:relative;display:flex;align-items:center;justify-content:start;padding:1rem 1rem;gap:0.5rem;margin-bottom:1rem;border-radius:5px;min-width:30rem;min-height:5rem;box-shadow:0 4px 12px rgba(0, 0, 0, 0.15);animation:", status === 'entering' ? toastFadeIn : status === 'exiting' ? toastFadeOut : 'none', " 1000ms ease forwards;" + (process.env.NODE_ENV === "production" ? "" : ";label:toastStyle;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
exports.toastStyle = toastStyle;
var svgStyle = type => (0, _react.css)("width:2rem;height:2rem;", svgColor(type), ";" + (process.env.NODE_ENV === "production" ? "" : ";label:svgStyle;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
exports.svgStyle = svgStyle;
var progressBarStyle = (toastTheme, type, duration) => (0, _react.css)("position:absolute;bottom:0;left:0.1rem;border-radius:0 0 0 7px;height:0.3rem;width:100%;", progressBarColor(toastTheme, type), " animation:", progressBarAnimation, " ", duration, "ms linear forwards;" + (process.env.NODE_ENV === "production" ? "" : ";label:progressBarStyle;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
exports.progressBarStyle = progressBarStyle;