plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.diffplug.spotless' version '6.25.0' // Spotless 플러그인 추가
}

group = 'com.ryc'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    testImplementation 'org.springframework.security:spring-security-test'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    //Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // JWT
    implementation 'com.auth0:java-jwt:4.4.0'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
    useJUnitPlatform()
}

spotless {
    java {
        target 'src/**/*.java' // Java 파일 대상 지정
        googleJavaFormat('1.17.0') // 구글 자바 포맷 적용
        importOrder 'java', 'javax', 'jakarta', 'org', 'com' // 임포트 정리
        removeUnusedImports() // 사용되지 않는 import 제거
        endWithNewline() // 모든 파일 끝에 개행 추가
        trimTrailingWhitespace() // 불필요한 공백 제거 (각 줄 끝에 남은 공백을 자동 삭제)
    }
}

tasks.named("compileJava") {
    dependsOn "spotlessApply"
}